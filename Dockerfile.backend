FROM golang:1.22-alpine AS builder

WORKDIR /app

# Install git and ca-certificates
RUN apk add --no-cache git ca-certificates openssh-client curl

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -ldflags "-s -w" -o gitlife-server cmd/gitlife-server/main.go

FROM alpine:latest

# Install necessary packages
RUN apk add --no-cache ca-certificates openssh-client git curl

# Create non-root user
RUN addgroup -g 1000 gitlife && \
    adduser -D -s /bin/sh -u 1000 -G gitlife gitlife

# Set working directory
WORKDIR /app

# Copy binary from builder
COPY --from=builder /app/gitlife-server .

# Create vault directory and set permissions
RUN mkdir -p /data/vault && chown -R gitlife:gitlife /data/vault
RUN mkdir -p /home/gitlife/.ssh && chown -R gitlife:gitlife /home/gitlife/.ssh

# Switch to non-root user
USER gitlife

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Command to run
CMD ["./gitlife-server", "--port=8080"]