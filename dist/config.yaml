version: 1
project_name: gitlife
release:
  github:
    owner: wguilherme
    name: gitlife
  prerelease: auto
  name_template: '{{.Tag}}'
  discussion_category_name: General
  header: |
    ## GitLife {{ .Tag }}

    Personal productivity system for developers using Git as a database.

    ### What's Changed
  footer: |
    ### Installation

    #### Download Binary
    ```bash
    # Linux/macOS
    curl -L https://github.com/wguilherme/gitlife/releases/download/{{ .Tag }}/gitlife_{{ .Os }}_{{ .Arch }}.tar.gz | tar xz
    chmod +x gitlife
    sudo mv gitlife /usr/local/bin/
    ```

    #### Using Go
    ```bash
    go install github.com/wguilherme/gitlife/cmd/gitlife@{{ .Tag }}
    ```

    #### Docker
    ```bash
    docker run --rm ghcr.io/wguilherme/gitlife:{{ .Tag }} --help
    ```

    ### Quick Start
    ```bash
    # Clone your vault repository
    gitlife vault clone git@github.com:user/vault.git

    # Add a book to your reading list
    gitlife reading add "Clean Code" --author="Robert Martin" --type=book

    # List your reading items
    gitlife reading list
    ```

    For more information, visit the [documentation](https://github.com/wguilherme/gitlife#readme).
  mode: replace
brews:
  - name: gitlife
    repository:
      owner: wguilherme
      name: homebrew-tap
      token: '{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}'
      branch: main
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com
    commit_msg_template: Brew formula update for {{ .ProjectName }} version {{ .Tag }}
    directory: Formula
    install: |
      bin.install "gitlife"
    test: |
      system "#{bin}/gitlife --help"
    description: Personal productivity system for developers using Git as database
    homepage: https://github.com/wguilherme/gitlife
    license: MIT
    goarm: "6"
    goamd64: v1
builds:
  - id: gitlife
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    goarm:
      - "6"
    gomips:
      - hardfloat
    goamd64:
      - v1
    targets:
      - linux_amd64_v1
      - linux_arm64
      - windows_amd64_v1
      - darwin_amd64_v1
      - darwin_arm64
    ignore:
      - goos: windows
        goarch: arm64
    dir: .
    main: ./cmd/gitlife/main.go
    binary: gitlife
    builder: go
    gobinary: go
    command: build
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
    env:
      - CGO_ENABLED=0
archives:
  - id: gitlife
    name_template: '{{ .ProjectName }}_ {{- title .Os }}_ {{- if eq .Arch "amd64" }}x86_64 {{- else if eq .Arch "386" }}i386 {{- else }}{{ .Arch }}{{ end }} {{- if .Arm }}v{{ .Arm }}{{ end }}'
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    files:
      - src: README.md
      - src: LICENSE*
      - src: k8s/**/*
snapshot:
  name_template: '{{ incpatch .Version }}-next'
checksum:
  name_template: checksums.txt
  algorithm: sha256
dockers:
  - goos: linux
    goarch: amd64
    goarm: "6"
    goamd64: v1
    dockerfile: Dockerfile
    image_templates:
      - ghcr.io/wguilherme/gitlife:{{ .Version }}-amd64
      - ghcr.io/wguilherme/gitlife:latest-amd64
    build_flag_templates:
      - --platform=linux/amd64
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.title={{.ProjectName}}
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
    use: buildx
  - goos: linux
    goarch: amd64
    goarm: "6"
    goamd64: v1
    dockerfile: Dockerfile
    image_templates:
      - ghcr.io/wguilherme/gitlife:{{ .Version }}-arm64
      - ghcr.io/wguilherme/gitlife:latest-arm64
    build_flag_templates:
      - --platform=linux/arm64
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.title={{.ProjectName}}
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
    use: buildx
docker_manifests:
  - name_template: ghcr.io/wguilherme/gitlife:{{ .Version }}
    image_templates:
      - ghcr.io/wguilherme/gitlife:{{ .Version }}-amd64
      - ghcr.io/wguilherme/gitlife:{{ .Version }}-arm64
    use: docker
  - name_template: ghcr.io/wguilherme/gitlife:latest
    image_templates:
      - ghcr.io/wguilherme/gitlife:latest-amd64
      - ghcr.io/wguilherme/gitlife:latest-arm64
    use: docker
changelog:
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - Merge pull request
      - Merge branch
      - go mod tidy
  sort: asc
  use: github
  format: '{{ .SHA }}: {{ .Message }} ({{ with .AuthorUsername }}@{{ . }}{{ else }}{{ .AuthorName }} <{{ .AuthorEmail }}>{{ end }})'
  groups:
    - title: Features
      regexp: ^.*?feat(\([[:word:]]+\))??!?:.+$
    - title: Bug fixes
      regexp: ^.*?fix(\([[:word:]]+\))??!?:.+$
      order: 1
    - title: Performance improvements
      regexp: ^.*?perf(\([[:word:]]+\))??!?:.+$
      order: 2
    - title: Others
      order: 999
dist: dist
env_files:
  github_token: ~/.config/goreleaser/github_token
  gitlab_token: ~/.config/goreleaser/gitlab_token
  gitea_token: ~/.config/goreleaser/gitea_token
before:
  hooks:
    - go mod tidy
    - go mod download
source:
  name_template: '{{ .ProjectName }}-{{ .Version }}'
  format: tar.gz
gomod:
  gobinary: go
announce:
  twitter:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  mastodon:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    server: ""
  reddit:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    url_template: '{{ .ReleaseURL }}'
  slack:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    username: GoReleaser
  discord:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    author: GoReleaser
    color: "3888754"
    icon_url: https://goreleaser.com/static/avatar.png
  teams:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    color: '#2D313E'
    icon_url: https://goreleaser.com/static/avatar.png
  smtp:
    subject_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    body_template: 'You can view details from: {{ .ReleaseURL }}'
  mattermost:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    username: GoReleaser
  linkedin:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  telegram:
    message_template: '{{ mdv2escape .ProjectName }} {{ mdv2escape .Tag }} is out{{ mdv2escape "!" }} Check it out at {{ mdv2escape .ReleaseURL }}'
    parse_mode: MarkdownV2
  webhook:
    message_template: '{ "message": "{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}"}'
    content_type: application/json; charset=utf-8
  opencollective:
    title_template: '{{ .Tag }}'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out!<br/>Check it out at <a href="{{ .ReleaseURL }}">{{ .ReleaseURL }}</a>'
  bluesky:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
git:
  tag_sort: -version:refname
github_urls:
  download: https://github.com
gitlab_urls:
  download: https://gitlab.com
